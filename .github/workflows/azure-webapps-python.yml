# Python on Linux Web App
# Build a Python project (using Django/Flask/Bottle frameworks) and deploy it to Azure as a Linux web app.
name: Deploy Python package to Azure Web App as a Linux web app.
on:
  [push]
# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
# See this in-depth article on CI for Python applications: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
#
# 1. Set up the following secrets in your repository:
#   AZURE_CREDENTIALS_GITHUB_SECRET
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: newstaggingapp     # Set this to your application's name
  WORKING_DIRECTORY: '.'                # Set this to the path to your working directory inside GitHub repository
  PYTHON_VERSION: '3.10'                # Set the version to use
  STARTUP_COMMAND: ''                   # Set this to the startup command required to start the gunicorn server. Default is empty

name: Build and deploy Python app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    # Checkout the repo 
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python environment
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}  # Use the Python version defined in the env

    # Install dependencies
    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        sudo apt-get update
        sudo apt-get install -y python${{ env.PYTHON_VERSION }}-venv
        python${{ env.PYTHON_VERSION }} -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # Azure login
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_GITHUB_SECRET }}  # Reference Azure service principal credentials from GitHub secrets

    # Configure Azure App Service settings (e.g., Python version)
    - name: Configure Azure App Service settings
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        mask-inputs: false
        general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}'

    # Deploy to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}    # Reference your app name from the environment variable
        package: ${{ env.WORKING_DIRECTORY }}    # Specify the directory to deploy (e.g., repository root or subfolder)
        startup-command: ${{ env.STARTUP_COMMAND }}  # Specify any startup command, if needed (optional)

    # Logout from Azure
    - name: Azure logout
      run: |
        az logout
